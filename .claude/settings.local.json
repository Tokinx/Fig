{
  "permissions": {
    "allow": [
      "WebFetch(domain:github.com)",
      "WebFetch(domain:api.github.com)",
      "webFetch(domain:www.cnkirito.moe)",
      "Bash(gh api:*)",
      "Bash(gh search:*)",
      "Bash(bun run build)",
      "Bash(npm run build)",
      "Bash(node:*)",
      "Bash(curl:*)",
      "Bash(gh repo clone:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(rg:*)",
      "Bash(find:*)",
      "Bash(bun run lint)",
      "Bash(npx eslint .)",
      "Bash(npx tsc --noEmit)",
      "Bash(echo:*)",
      "Bash(ip route:*)",
      "Bash(npx tsx:*)",
      "Bash(ls:*)",
      "Bash(npx tsup --dts-only)",
      "WebFetch(domain:docs.anthropic.com)",
      "Bash(mkdir:*)",
      "Bash(npm init -y)",
      "Bash(npm install:*)",
      "Bash(npm rebuild sqlite3)",
      "Bash(sqlite3:*)",
      "Bash(apt update)",
      "Bash(apt install -y sqlite3)",
      "Bash(rm:*)",
      "Bash(npm run dev)",
      "Bash(timeout:*)",
      "Bash(grep:*)",
      "Bash(npx tsc --noEmit --skipLibCheck src/routes/messages/stream-translation.ts)",
      "Bash(npm run lint:*)",
      "Bash(npx tsc --noEmit --project .)",
      "WebFetch(domain:raw.githubusercontent.com)",
      "Bash(npx create-react-app client)",
      "Bash(npx tailwindcss init)",
      "Bash(npx tailwindcss init -p)",
      "Bash(./node_modules/.bin/tailwindcss:*)",
      "Bash(npm run)",
      "Bash(-H \"Content-Type: application/json\" )",
      "Bash(-d:*)",
      "Bash(TOKEN=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NWUwMmZiNDYwMjVkM2M5OWQyYmMwYyIsImlhdCI6MTc1MDk5MTYyNiwiZXhwIjoxNzUzNTgzNjI2fQ.TEwcRcjf6ZsZs3qTsjcAjDkoBEPHkbXT6roWvVYqSn8\")",
      "Bash(__NEW_LINE__ curl -X GET http://localhost:4000/api/auth/me )",
      "Bash(-H \"Authorization: Bearer $TOKEN\")",
      "Bash(pkill:*)",
      "Bash(npm start)",
      "Bash(chmod:*)",
      "Bash(npm uninstall tailwindcss)",
      "Bash(npm uninstall @tailwindcss/postcss)",
      "WebFetch(domain:www.cnkirito.moe)",
      "Bash(touch:*)",
      "WebFetch(domain:192.168.1.52)",
      "Bash(ss:*)",
      "Bash(npm audit:*)",
      "Bash(openssl rand:*)",
      "Bash(npm test)",
      "WebFetch(domain:www.bt.cn)",
      "Bash(python3:*)",
      "Bash(npx webpack-bundle-analyzer:*)",
      "Bash(npm run build:*)",
      "WebFetch(domain:react.dev)",
      "Bash(sed:*)",
      "Bash(./check_frontend.sh:*)",
      "Bash(npx eslint:*)",
      "Bash(NODE_ENV=production STORAGE_PROVIDER=local BASE_URL=https://www.asheblog.org MEDIA_BASE_URL=https://cdn.asheblog.org QINIU_DOMAIN=cdn.asheblog.org node -e \"\n// 复制 getPublicUrl 的核心逻辑\nfunction getPublicUrl(filePath, provider) {\n  const relativePath = filePath.replace(/\\\\/g, ''/'');\n  \n  if (provider === ''qiniu'') {\n    if (process.env.MEDIA_BASE_URL) {\n      return \\`${process.env.MEDIA_BASE_URL}/${relativePath}\\`;\n    }\n    if (process.env.QINIU_DOMAIN) {\n      return \\`https://${process.env.QINIU_DOMAIN}/${relativePath}\\`;\n    }\n  } else {\n    const baseUrl = process.env.BASE_URL || (process.env.NODE_ENV === ''production'' ? ''https://asheblog.org'' : ''http://localhost:4000'');\n    const cleanRelativePath = relativePath.startsWith(''/'') ? relativePath.substring(1) : relativePath;\n    const finalUrl = \\`${baseUrl}/${cleanRelativePath}\\`;\n    return finalUrl;\n  }\n  \n  const baseUrl = process.env.BASE_URL || (process.env.NODE_ENV === ''production'' ? ''https://asheblog.org'' : ''http://localhost:4000'');\n  const cleanRelativePath = relativePath.startsWith(''/'') ? relativePath.substring(1) : relativePath;\n  const finalUrl = \\`${baseUrl}/${cleanRelativePath}\\`;\n  return finalUrl;\n}\n\nconsole.log(''⚙️  当前环境配置'');\nconsole.log(''====================================='');\nconsole.log(''NODE_ENV:'', process.env.NODE_ENV);\nconsole.log(''STORAGE_PROVIDER:'', process.env.STORAGE_PROVIDER);\nconsole.log(''BASE_URL:'', process.env.BASE_URL);\nconsole.log(''MEDIA_BASE_URL:'', process.env.MEDIA_BASE_URL);\nconsole.log(''QINIU_DOMAIN:'', process.env.QINIU_DOMAIN);\nconsole.log(''====================================='');\n\nconsole.log(''\\n🧪 测试存储服务URL生成逻辑'');\nconsole.log(''====================================='');\n\nconst testPaths = [\n  ''uploads/images/test.jpg'',\n  ''uploads/thumbnails/thumb_test.jpg'',\n  ''uploads/videos/test.mp4''\n];\n\nconsole.log(''\\n📁 测试本地存储 (STORAGE_PROVIDER=local)'');\ntestPaths.forEach(path => {\n  const url = getPublicUrl(path, ''local'');\n  console.log(\\`  ${path} → ${url}\\`);\n});\n\nconsole.log(''\\n☁️  测试七牛云存储 (STORAGE_PROVIDER=qiniu)'');\nconst qiniuPaths = [\n  ''images/test.jpg'',\n  ''thumbnails/thumb_test.jpg'',\n  ''videos/test.mp4''\n];\n\nqiniuPaths.forEach(path => {\n  const url = getPublicUrl(path, ''qiniu'');\n  console.log(\\`  ${path} → ${url}\\`);\n});\n\nconsole.log(''\\n✅ URL生成测试完成'');\n\")",
      "Bash(MEDIA_BASE_URL=https://cdn.asheblog.org node test_url_transform.js)",
      "Bash(MONGODB_URI=mongodb://localhost:27017/blog node scripts/build-seo-inject.js)",
      "mcp__sequential-thinking__sequentialthinking",
      "Bash(npx react-scripts build)",
      "mcp__fetch__imageFetch",
      "mcp__puppeteer__puppeteer_navigate",
      "mcp__puppeteer__puppeteer_screenshot",
      "Bash(npx wrangler d1 list)",
      "Bash(gh issue view:*)",
      "Bash(npm i)"
    ],
    "deny": []
  }
}